<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Order;

final class OrderItem
{
    private $orderItemId;
    private $orderReference;
    private $ean;
    private $title;
    private $quantity;
    private $offerPrice;
    private $transactionFee;
    private $latestDeliveryDate;
    private $offerCondition;
    private $cancelRequest;
    private $fulfilmentMethod;
    private $selectedDeliveryWindow;

    public function __construct(OrderItemId $orderItemId, string $orderReference, \BolCom\RetailerApi\Model\Ean $ean, string $title, Quantity $quantity, \BolCom\RetailerApi\Model\Offer\Price $offerPrice, float $transactionFee, \BolCom\RetailerApi\Model\Date $latestDeliveryDate, \BolCom\RetailerApi\Model\Offer\Condition $offerCondition, string $cancelRequest, \BolCom\RetailerApi\Model\FulfilmentMethod $fulfilmentMethod, SelectedDeliveryWindow $selectedDeliveryWindow)
    {
        $this->orderItemId = $orderItemId;
        $this->orderReference = $orderReference;
        $this->ean = $ean;
        $this->title = $title;
        $this->quantity = $quantity;
        $this->offerPrice = $offerPrice;
        $this->transactionFee = $transactionFee;
        $this->latestDeliveryDate = $latestDeliveryDate;
        $this->offerCondition = $offerCondition;
        $this->cancelRequest = $cancelRequest;
        $this->fulfilmentMethod = $fulfilmentMethod;
        $this->selectedDeliveryWindow = $selectedDeliveryWindow;
    }

    public function orderItemId(): OrderItemId
    {
        return $this->orderItemId;
    }

    public function orderReference(): string
    {
        return $this->orderReference;
    }

    public function ean(): \BolCom\RetailerApi\Model\Ean
    {
        return $this->ean;
    }

    public function title(): string
    {
        return $this->title;
    }

    public function quantity(): Quantity
    {
        return $this->quantity;
    }

    public function offerPrice(): \BolCom\RetailerApi\Model\Offer\Price
    {
        return $this->offerPrice;
    }

    public function transactionFee(): float
    {
        return $this->transactionFee;
    }

    public function latestDeliveryDate(): \BolCom\RetailerApi\Model\Date
    {
        return $this->latestDeliveryDate;
    }

    public function offerCondition(): \BolCom\RetailerApi\Model\Offer\Condition
    {
        return $this->offerCondition;
    }

    public function cancelRequest(): string
    {
        return $this->cancelRequest;
    }

    public function fulfilmentMethod(): \BolCom\RetailerApi\Model\FulfilmentMethod
    {
        return $this->fulfilmentMethod;
    }

    public function selectedDeliveryWindow(): SelectedDeliveryWindow
    {
        return $this->selectedDeliveryWindow;
    }

    public function withOrderItemId(OrderItemId $orderItemId): OrderItem
    {
        return new self($orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOrderReference(string $orderReference): OrderItem
    {
        return new self($this->orderItemId, $orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withEan(\BolCom\RetailerApi\Model\Ean $ean): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withTitle(string $title): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withQuantity(Quantity $quantity): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOfferPrice(\BolCom\RetailerApi\Model\Offer\Price $offerPrice): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withTransactionFee(float $transactionFee): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withLatestDeliveryDate(\BolCom\RetailerApi\Model\Date $latestDeliveryDate): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withOfferCondition(\BolCom\RetailerApi\Model\Offer\Condition $offerCondition): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withCancelRequest(string $cancelRequest): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $cancelRequest, $this->fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withFulfilmentMethod(\BolCom\RetailerApi\Model\FulfilmentMethod $fulfilmentMethod): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $fulfilmentMethod, $this->selectedDeliveryWindow);
    }

    public function withSelectedDeliveryWindow(SelectedDeliveryWindow $selectedDeliveryWindow): OrderItem
    {
        return new self($this->orderItemId, $this->orderReference, $this->ean, $this->title, $this->quantity, $this->offerPrice, $this->transactionFee, $this->latestDeliveryDate, $this->offerCondition, $this->cancelRequest, $this->fulfilmentMethod, $selectedDeliveryWindow);
    }

    public static function fromArray(array $data): OrderItem
    {
        if (! isset($data['orderItemId']) || ! \is_string($data['orderItemId'])) {
            throw new \InvalidArgumentException("Key 'orderItemId' is missing in data array or is not a string");
        }

        $orderItemId = OrderItemId::fromString($data['orderItemId']);

        if (! isset($data['orderReference']) || ! \is_string($data['orderReference'])) {
            throw new \InvalidArgumentException("Key 'orderReference' is missing in data array or is not a string");
        }

        $orderReference = $data['orderReference'];

        if (! isset($data['ean']) || ! \is_string($data['ean'])) {
            throw new \InvalidArgumentException("Key 'ean' is missing in data array or is not a string");
        }

        $ean = \BolCom\RetailerApi\Model\Ean::fromString($data['ean']);

        if (! isset($data['title']) || ! \is_string($data['title'])) {
            throw new \InvalidArgumentException("Key 'title' is missing in data array or is not a string");
        }

        $title = $data['title'];

        if (! isset($data['quantity']) || ! \is_int($data['quantity'])) {
            throw new \InvalidArgumentException("Key 'quantity' is missing in data array or is not a int");
        }

        $quantity = Quantity::fromScalar($data['quantity']);

        if (! isset($data['offerPrice']) || (! \is_float($data['offerPrice']) && ! \is_int($data['offerPrice']))) {
            throw new \InvalidArgumentException("Key 'offerPrice' is missing in data array or is not a float");
        }

        $offerPrice = \BolCom\RetailerApi\Model\Offer\Price::fromScalar($data['offerPrice']);

        if (! isset($data['transactionFee']) || (! \is_float($data['transactionFee']) && ! \is_int($data['transactionFee']))) {
            throw new \InvalidArgumentException("Key 'transactionFee' is missing in data array or is not a float");
        }

        $transactionFee = $data['transactionFee'];

        if (! isset($data['latestDeliveryDate']) || ! \is_string($data['latestDeliveryDate'])) {
            throw new \InvalidArgumentException("Key 'latestDeliveryDate' is missing in data array or is not a string");
        }

        $latestDeliveryDate = \BolCom\RetailerApi\Model\Date::fromString($data['latestDeliveryDate']);

        if (! isset($data['offerCondition']) || ! \is_string($data['offerCondition'])) {
            throw new \InvalidArgumentException("Key 'offerCondition' is missing in data array or is not a string");
        }

        $offerCondition = \BolCom\RetailerApi\Model\Offer\Condition::fromName($data['offerCondition']);

        if (! isset($data['cancelRequest']) || ! \is_string($data['cancelRequest'])) {
            throw new \InvalidArgumentException("Key 'cancelRequest' is missing in data array or is not a string");
        }

        $cancelRequest = $data['cancelRequest'];

        if (! isset($data['fulfilmentMethod']) || ! \is_string($data['fulfilmentMethod'])) {
            throw new \InvalidArgumentException("Key 'fulfilmentMethod' is missing in data array or is not a string");
        }

        $fulfilmentMethod = \BolCom\RetailerApi\Model\FulfilmentMethod::fromName($data['fulfilmentMethod']);

        if (! isset($data['selectedDeliveryWindow']) || ! \is_array($data['selectedDeliveryWindow'])) {
            throw new \InvalidArgumentException("Key 'selectedDeliveryWindow' is missing in data array or is not an array");
        }

        $selectedDeliveryWindow = SelectedDeliveryWindow::fromArray($data['selectedDeliveryWindow']);

        return new self(
            $orderItemId,
            $orderReference,
            $ean,
            $title,
            $quantity,
            $offerPrice,
            $transactionFee,
            $latestDeliveryDate,
            $offerCondition,
            $cancelRequest,
            $fulfilmentMethod,
            $selectedDeliveryWindow
        );
    }
}
