<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Order;

final class CancellationReason
{
    public const OPTIONS = [
        'OutOfStock' => 'OUT_OF_STOCK',
        'RequestedByCustomer' => 'REQUESTED_BY_CUSTOMER',
        'BadCondition' => 'BAD_CONDITION',
        'HigherShipcost' => 'HIGHER_SHIPCOST',
        'IncorrectPrice' => 'INCORRECT_PRICE',
        'NotAvailInTime' => 'NOT_AVAIL_IN_TIME',
        'NoBolGuarantee' => 'NO_BOL_GUARANTEE',
        'OrderedTwice' => 'ORDERED_TWICE',
        'RetainItem' => 'RETAIN_ITEM',
        'TechIssue' => 'TECH_ISSUE',
        'UnfinableItem' => 'UNFINDABLE_ITEM',
        'Other' => 'OTHER',
    ];

    public const OutOfStock = 'OUT_OF_STOCK';
    public const RequestedByCustomer = 'REQUESTED_BY_CUSTOMER';
    public const BadCondition = 'BAD_CONDITION';
    public const HigherShipcost = 'HIGHER_SHIPCOST';
    public const IncorrectPrice = 'INCORRECT_PRICE';
    public const NotAvailInTime = 'NOT_AVAIL_IN_TIME';
    public const NoBolGuarantee = 'NO_BOL_GUARANTEE';
    public const OrderedTwice = 'ORDERED_TWICE';
    public const RetainItem = 'RETAIN_ITEM';
    public const TechIssue = 'TECH_ISSUE';
    public const UnfinableItem = 'UNFINDABLE_ITEM';
    public const Other = 'OTHER';

    private $name;
    private $value;

    private function __construct(string $name)
    {
        $this->name = $name;
        $this->value = self::OPTIONS[$name];
    }

    public static function outOfStock(): self
    {
        return new self('OutOfStock');
    }

    public static function requestedByCustomer(): self
    {
        return new self('RequestedByCustomer');
    }

    public static function badCondition(): self
    {
        return new self('BadCondition');
    }

    public static function higherShipcost(): self
    {
        return new self('HigherShipcost');
    }

    public static function incorrectPrice(): self
    {
        return new self('IncorrectPrice');
    }

    public static function notAvailInTime(): self
    {
        return new self('NotAvailInTime');
    }

    public static function noBolGuarantee(): self
    {
        return new self('NoBolGuarantee');
    }

    public static function orderedTwice(): self
    {
        return new self('OrderedTwice');
    }

    public static function retainItem(): self
    {
        return new self('RetainItem');
    }

    public static function techIssue(): self
    {
        return new self('TechIssue');
    }

    public static function unfinableItem(): self
    {
        return new self('UnfinableItem');
    }

    public static function other(): self
    {
        return new self('Other');
    }

    public static function fromName(string $value): self
    {
        if (! isset(self::OPTIONS[$value])) {
            throw new \InvalidArgumentException('Unknown enum name given');
        }

        return self::{$value}();
    }

    public static function fromValue($value): self
    {
        foreach (self::OPTIONS as $name => $v) {
            if ($v === $value) {
                return self::{$name}();
            }
        }

        throw new \InvalidArgumentException('Unknown enum value given');
    }

    public function equals(CancellationReason $other): bool
    {
        return \get_class($this) === \get_class($other) && $this->name === $other->name;
    }

    public function name(): string
    {
        return $this->name;
    }

    public function value()
    {
        return $this->value;
    }

    public function __toString(): string
    {
        return $this->name;
    }

    public function toString(): string
    {
        return $this->name;
    }
}
