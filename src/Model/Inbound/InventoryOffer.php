<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Inbound;

final class InventoryOffer
{
    private $ean;
    private $bsku;
    private $nckStock;
    private $stock;
    private $title;

    public function __construct(\BolCom\RetailerApi\Model\Offer\Ean $ean, BSku $bsku, int $nckStock, int $stock, string $title)
    {
        $this->ean = $ean;
        $this->bsku = $bsku;
        $this->nckStock = $nckStock;
        $this->stock = $stock;
        $this->title = $title;
    }

    public function ean(): \BolCom\RetailerApi\Model\Offer\Ean
    {
        return $this->ean;
    }

    public function bsku(): BSku
    {
        return $this->bsku;
    }

    public function nckStock(): int
    {
        return $this->nckStock;
    }

    public function stock(): int
    {
        return $this->stock;
    }

    public function title(): string
    {
        return $this->title;
    }

    public function withEan(\BolCom\RetailerApi\Model\Offer\Ean $ean): InventoryOffer
    {
        return new self($ean, $this->bsku, $this->nckStock, $this->stock, $this->title);
    }

    public function withBsku(BSku $bsku): InventoryOffer
    {
        return new self($this->ean, $bsku, $this->nckStock, $this->stock, $this->title);
    }

    public function withNckStock(int $nckStock): InventoryOffer
    {
        return new self($this->ean, $this->bsku, $nckStock, $this->stock, $this->title);
    }

    public function withStock(int $stock): InventoryOffer
    {
        return new self($this->ean, $this->bsku, $this->nckStock, $stock, $this->title);
    }

    public function withTitle(string $title): InventoryOffer
    {
        return new self($this->ean, $this->bsku, $this->nckStock, $this->stock, $title);
    }

    public static function fromArray(array $data): InventoryOffer
    {
        if (! isset($data['ean']) || ! \is_string($data['ean'])) {
            throw new \InvalidArgumentException("Key 'ean' is missing in data array or is not a string");
        }

        $ean = \BolCom\RetailerApi\Model\Offer\Ean::fromString($data['ean']);

        if (! isset($data['bsku']) || ! \is_string($data['bsku'])) {
            throw new \InvalidArgumentException("Key 'bsku' is missing in data array or is not a string");
        }

        $bsku = BSku::fromString($data['bsku']);

        if (! isset($data['nckStock']) || ! \is_int($data['nckStock'])) {
            throw new \InvalidArgumentException("Key 'nckStock' is missing in data array or is not a int");
        }

        $nckStock = $data['nckStock'];

        if (! isset($data['stock']) || ! \is_int($data['stock'])) {
            throw new \InvalidArgumentException("Key 'stock' is missing in data array or is not a int");
        }

        $stock = $data['stock'];

        if (! isset($data['title']) || ! \is_string($data['title'])) {
            throw new \InvalidArgumentException("Key 'title' is missing in data array or is not a string");
        }

        $title = $data['title'];

        return new self(
            $ean,
            $bsku,
            $nckStock,
            $stock,
            $title
        );
    }
}
