<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Transport;

final class TransporterCode
{
    public const OPTIONS = [
        'Briefpost' => 'BRIEFPOST',
        'Ups' => 'UPS',
        'Tnt' => 'TNT',
        'TntExtra' => 'TNT-EXTRA',
        'TntBrief' => 'TNT_BRIEF',
        'TntExpress' => 'TNT-EXPRESS',
        'Dyl' => 'DYL',
        'DpdNl' => 'DPD-NL',
        'DpdBe' => 'DPD-BE',
        'BPostBe' => 'BPOST_BE',
        'BpostBrief' => 'BPOST_BRIEF',
        'Dhlforyou' => 'DHLFORYOU',
        'Gls' => 'GLS',
        'FedexNl' => 'FEDEX_NL',
        'FedexBe' => 'FEDEX_BE',
        'Other' => 'OTHER',
        'Dhl' => 'DHL',
        'DhlDe' => 'DHL_DE',
        'DhlGlobalMail' => 'DHL-GLOBAL-MAIL',
        'Tsn' => 'TSN',
        'Fiege' => 'FIEGE',
        'Transmission' => 'TRANSMISSION',
        'ParcelNl' => 'PARCEL-NL',
        'Logoix' => 'LOGOIX',
        'Packs' => 'PACKS',
        'Courier' => 'COURIER',
        'Rjp' => 'RJP',
    ];

    public const Briefpost = 'BRIEFPOST';
    public const Ups = 'UPS';
    public const Tnt = 'TNT';
    public const TntExtra = 'TNT-EXTRA';
    public const TntBrief = 'TNT_BRIEF';
    public const TntExpress = 'TNT-EXPRESS';
    public const Dyl = 'DYL';
    public const DpdNl = 'DPD-NL';
    public const DpdBe = 'DPD-BE';
    public const BPostBe = 'BPOST_BE';
    public const BpostBrief = 'BPOST_BRIEF';
    public const Dhlforyou = 'DHLFORYOU';
    public const Gls = 'GLS';
    public const FedexNl = 'FEDEX_NL';
    public const FedexBe = 'FEDEX_BE';
    public const Other = 'OTHER';
    public const Dhl = 'DHL';
    public const DhlDe = 'DHL_DE';
    public const DhlGlobalMail = 'DHL-GLOBAL-MAIL';
    public const Tsn = 'TSN';
    public const Fiege = 'FIEGE';
    public const Transmission = 'TRANSMISSION';
    public const ParcelNl = 'PARCEL-NL';
    public const Logoix = 'LOGOIX';
    public const Packs = 'PACKS';
    public const Courier = 'COURIER';
    public const Rjp = 'RJP';

    private $name;
    private $value;

    private function __construct(string $name)
    {
        $this->name = $name;
        $this->value = self::OPTIONS[$name];
    }

    public static function briefpost(): self
    {
        return new self('Briefpost');
    }

    public static function ups(): self
    {
        return new self('Ups');
    }

    public static function tnt(): self
    {
        return new self('Tnt');
    }

    public static function tntExtra(): self
    {
        return new self('TntExtra');
    }

    public static function tntBrief(): self
    {
        return new self('TntBrief');
    }

    public static function tntExpress(): self
    {
        return new self('TntExpress');
    }

    public static function dyl(): self
    {
        return new self('Dyl');
    }

    public static function dpdNl(): self
    {
        return new self('DpdNl');
    }

    public static function dpdBe(): self
    {
        return new self('DpdBe');
    }

    public static function bPostBe(): self
    {
        return new self('BPostBe');
    }

    public static function bpostBrief(): self
    {
        return new self('BpostBrief');
    }

    public static function dhlforyou(): self
    {
        return new self('Dhlforyou');
    }

    public static function gls(): self
    {
        return new self('Gls');
    }

    public static function fedexNl(): self
    {
        return new self('FedexNl');
    }

    public static function fedexBe(): self
    {
        return new self('FedexBe');
    }

    public static function other(): self
    {
        return new self('Other');
    }

    public static function dhl(): self
    {
        return new self('Dhl');
    }

    public static function dhlDe(): self
    {
        return new self('DhlDe');
    }

    public static function dhlGlobalMail(): self
    {
        return new self('DhlGlobalMail');
    }

    public static function tsn(): self
    {
        return new self('Tsn');
    }

    public static function fiege(): self
    {
        return new self('Fiege');
    }

    public static function transmission(): self
    {
        return new self('Transmission');
    }

    public static function parcelNl(): self
    {
        return new self('ParcelNl');
    }

    public static function logoix(): self
    {
        return new self('Logoix');
    }

    public static function packs(): self
    {
        return new self('Packs');
    }

    public static function courier(): self
    {
        return new self('Courier');
    }

    public static function rjp(): self
    {
        return new self('Rjp');
    }

    public static function fromName(string $value): self
    {
        if (! isset(self::OPTIONS[$value])) {
            throw new \InvalidArgumentException('Unknown enum name given');
        }

        return self::{$value}();
    }

    public static function fromValue($value): self
    {
        foreach (self::OPTIONS as $name => $v) {
            if ($v === $value) {
                return self::{$name}();
            }
        }

        throw new \InvalidArgumentException('Unknown enum value given');
    }

    public function equals(TransporterCode $other): bool
    {
        return \get_class($this) === \get_class($other) && $this->name === $other->name;
    }

    public function name(): string
    {
        return $this->name;
    }

    public function value()
    {
        return $this->value;
    }

    public function __toString(): string
    {
        return $this->name;
    }

    public function toString(): string
    {
        return $this->name;
    }
}
