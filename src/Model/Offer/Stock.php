<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Offer;

final class Stock
{
    private $amount;
    private $managedByRetailer;

    public function __construct(QuantityInStock $amount, bool $managedByRetailer)
    {
        $this->amount = $amount;
        $this->managedByRetailer = $managedByRetailer;
    }

    public function amount(): QuantityInStock
    {
        return $this->amount;
    }

    public function managedByRetailer(): bool
    {
        return $this->managedByRetailer;
    }

    public function withAmount(QuantityInStock $amount): Stock
    {
        return new self($amount, $this->managedByRetailer);
    }

    public function withManagedByRetailer(bool $managedByRetailer): Stock
    {
        return new self($this->amount, $managedByRetailer);
    }

    public static function fromArray(array $data): Stock
    {
        if (! isset($data['amount']) || ! \is_int($data['amount'])) {
            throw new \InvalidArgumentException("Key 'amount' is missing in data array or is not a int");
        }

        $amount = QuantityInStock::fromScalar($data['amount']);

        if (! isset($data['managedByRetailer']) || ! \is_bool($data['managedByRetailer'])) {
            throw new \InvalidArgumentException("Key 'managedByRetailer' is missing in data array or is not a bool");
        }

        $managedByRetailer = $data['managedByRetailer'];

        return new self($amount, $managedByRetailer);
    }

    public function toArray(): array
    {
        return [
            'amount' => $this->amount->toScalar(),
            'managedByRetailer' => $this->managedByRetailer,
        ];
    }
}
